import{o as e,c as r,k as a,q as _,s as n,A as o,e as t}from"../modules/vue-BEAs01RR.js";import{I as p}from"./default-BCOmFF8E.js";import{_ as i,as as s}from"../index-ChFb6XYZ.js";import{p as c,u as l,f as m}from"./context-Cd2A4NL3.js";import"../modules/shiki-Cgzxv8mj.js";const d=t("p",null,"异或问题的常见算法有01字典树和线性基",-1),u=t("p",null,"这题求多个异或中的最大异或值,显然和01字典树有关",-1),f=t("p",null,"但是这题是在树上的,然后求两个节点间的异或,暴力枚举肯定是超时的,想想异或有什么性质吗?",-1),h=t("p",null,"异或相同的数不改变结果!所以在树上重复的节点不影响结果",-1),x=t("p",null,"所以我们只需要维护每个节点到root的异或路径,然后01tire求最大异或即可",-1),k={__name:"19",setup(v){return c(s),l(),(B,P)=>(e(),r(p,_(n(o(m)(o(s),18))),{default:a(()=>[d,u,f,h,x]),_:1},16))}},w=i(k,[["__file","/@slidev/slides/19.md"]]);export{w as default};
